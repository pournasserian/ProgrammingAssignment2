x
y<- x-3
y
z<- c(1.1, 9, 3.14)
?c
z
(z, 555, z)
c(z, 555, z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,1000)
z*2+1000
my_sqrt
my_div
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=4)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
5+7
x<=5+7
x<-5+7
x
y<-x-3
y
z<- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
num_vec<-c( 0.5, 55, -10, 6)
num_vect<-c( 0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect>=6
my_char<-c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Amir Pournasserian")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste( c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x<- c(44, NA, 5,
| NA)
x<- c(44, NA, 5,      | NA)
x<- c(44, NA, 5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_na <- my_data==NA
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector = c(1:20)
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
? matrix
my_matrix2<-matrix(ncol = 5,nrow = 4)
my_matrix2<-matrix(ncol = 5,nrow = 4,data = 1:20)
identical(my_matrix,my_matrix2)
patients<- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
info()
bye()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
z
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
.
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
rnorm(10)
rnorm(10)
rnorm(10)
rnorm(100,5)
rnorm(10,5)
rnorm(10,5)
runif(10)
log(-1)
library(datasets)
data(iris)
?iris
iris
str(iris)
?iris
?lm
?iris
?lm
library(datasets)
str(airquality)
airquality
summary(airquality)
head(airquality)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
ploy(x,y)
plot(x,y)
set.seed(10)
x <- rbinom(110, 10, 0.5)
e <- rnorm(110, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
set.seed(1)
rpois(5, 2)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
x1<-rnorm(10)
x2<- rnorm(10)
y<-rnorm(10)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
?summryProf
?summaryProf
?summaryRprof
system.time()
system.time(rnorm(1000))
system.time(x<-rnorm(1000))
system.time(x<-rnorm(100000))
system.time(x<-rnorm(1000000))
system.time(x<-rnorm(10000000))
install.packages('rJava',,'http://www.rforge.net/')
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7')
library(rJava)
x<- as.matrix(1:10)
x
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
x<- matrix(c(1:9), 3, 3)
x
setwd("C:\\Users\\a.pournasserian\\Desktop\\Coursera\\Data Science\\3 - Getting and Cleaning Data\\Quizzes\\Week 4")
source("secript.r")
source("script.r")
q2()
source("script.r")
x<-q2()
names(x)
y <- x[!c(1:4), ]
head(y)
y
y <- x[!1:4, ]
y
y <- x[,1]
y
y <- x[,1:2]
y
y <- x[!x[1]=="",]
y
source("script.r")
x<-q2()
head(x)
y<- sub(",", "", x[,x[5]])
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
strtrim(c("abcdef", "abcdef", "abcdef"), c(1,5,10))
source("script.r")
strtrim(c("abcdef", "abcdef", "abcdef"), c(1,5,10))
q2()
strtrim(c("abcdef", "abcdef", "abcdef"), c(1,5,10))
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q2()
source("script.r")
q1()
source("script.r")
q1()
source("script.r")
q1()
source("script.r")
q1()
source("script.r")
q1()
source("script.r")
q3()
source("script.r")
q3()
source("script.r")
q3()
source("script.r")
q3()
source("script.r")
q3()
source("script.r")
q3()
source("script.r")
q3()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
q4()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
q4()
source("script.r")
q4()
q4()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
source("script.r")
q4()
q4()
source("script.r")
q4()
install.packages("quantmod")
source("script.r")
q4()
q5()
source("script.r")
q5()
source("script.r")
q5()
source("script.r")
q5()
source("script.r")
q5()
source("script.r")
q5()
source("script.r")
q5()
source("script.r")
source("script.r")
q5()
source("script.r")
q5()
setwd("C:\\Users\\a.pournasserian\\Desktop\\Coursera\\Data Science\\3 - Getting and Cleaning Data\\Quizzes\\Week 4")
source("cachematrix.r")
setwd("C:\\Users\\a.pournasserian\\Desktop\\Coursera\\Data Science\\2 - R Programming\\Programming Assignments\\2\\ProgrammingAssignment2")
source("cachematrix.r")
x <- matrix(data = c(1:25), nrow = =5, ncol = 5)
x <- matrix(data = c(1:25), nrow  =5, ncol = 5)
x
cacheSolve(x)
x
source("cachematrix.r")
cacheSolve(x)
source("cachematrix.r")
cacheSolve(x)
source("cachematrix.r")
cacheSolve(x)
str(x)
class(x)
source("cachematrix.r")
cachemean(c(1:10))
cachemean(makeVector (c(1:10)))
cacheSolve(makeCacheMatrix(x))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(x))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(x))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(x))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(x))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(x))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(x))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(x))
hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, "+") }
h8 <- hilbert(8); h8
sh8 <- solve(h8)
sh8
x<- matrix(c(1:9), ncol = 3, nrow = 3)
x
cacheSolve(makeCacheMatrix(x))
cacheSolve(makeCacheMatrix(h8))
cacheSolve(makeCacheMatrix(h8))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(h8))
cacheSolve(makeCacheMatrix(h8))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(h8))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(h8))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(h8))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(h8))
source("cachematrix.r")
cacheSolve(makeCacheMatrix(h8))
source("cachematrix.r")
cachemean(makeVector(c(1:10)))
cachemean(makeVector(c(1:10)))
x<-c(1:100)
cachemean(makeVector(x))
cachemean(makeVector(x))
(makeVector(x))
(makeVector(x))
class(makeVector(x))
a <- makeVector(c(1,2,3,4))
a
a$getmean()
cachemean(a)
a$getmean()
cachemean(a)
x
a <- h8
a
makeCacheMatrix(h8)
a <= makeCacheMatrix
a <= makeCacheMatrix(h8)
h8
a <= makeCacheMatrix(h8)
a <- makeCacheMatrix(h8)
cacheSolve(a)
cacheSolve(a)
cacheSolve(a)
cacheSolve(makeCacheMatrix(h8))
cacheSolve(makeCacheMatrix(h8))
